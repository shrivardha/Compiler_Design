; ModuleID = '-'
source_filename = "-"
target datalayout = "e-m:w-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-w64-windows-gnu"

%struct._SwiftEmptyArrayStorage = type { %struct.HeapObject, %struct._SwiftArrayBodyStorage }
%struct.HeapObject = type { %struct.HeapMetadata*, %struct.InlineRefCountsPlaceholder }
%struct.HeapMetadata = type opaque
%struct.InlineRefCountsPlaceholder = type { i64 }
%struct._SwiftArrayBodyStorage = type { i64, i64 }
%swift.type = type { i64 }
%swift.protocol = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i16, i16, i32 }
%swift.refcounted = type { %swift.type*, i64 }
%Ts23_ContiguousArrayStorageCyypG = type <{ %swift.refcounted, %Ts10_ArrayBodyV }>
%Ts10_ArrayBodyV = type <{ %TSC22_SwiftArrayBodyStorageV }>
%TSC22_SwiftArrayBodyStorageV = type <{ %TSi, %TSu }>
%TSi = type <{ i64 }>
%TSu = type <{ i64 }>
%Ts27_ContiguousArrayStorageBaseC = type <{ %swift.refcounted, %Ts10_ArrayBodyV }>
%Any = type { [24 x i8], %swift.type* }
%TSS = type <{ %Ts11_StringCoreV }>
%Ts11_StringCoreV = type <{ %TSvSg, %TSu, %TyXlSg }>
%TSvSg = type <{ [8 x i8] }>
%TyXlSg = type <{ [8 x i8] }>

@_swiftEmptyArrayStorage = external global %struct._SwiftEmptyArrayStorage, align 8
@_T0s23_ContiguousArrayStorageCyypGML = linkonce_odr hidden global %swift.type* null, align 8
@_T0ypML = linkonce_odr hidden global %swift.type* null, align 8
@_swift_getExistentialTypeMetadata = external global %swift.type* (i1, %swift.type*, i64, %swift.protocol**)*
@_swift_allocObject = external global %swift.refcounted* (%swift.type*, i64, i64)*
@_T0s27_ContiguousArrayStorageBaseC16countAndCapacitys01_B4BodyVvpWvd = external global i64, align 8
@_T0SSN = external global %swift.type, align 8
@0 = private unnamed_addr constant [13 x i8] c"Hello shri!!\00"
@1 = private unnamed_addr constant [54 x i8] c"C:/projects/swift/stdlib/public/core/StringCore.swift\00"
@2 = private unnamed_addr constant [41 x i8] c"Empty string storage with non-zero count\00"
@3 = private unnamed_addr constant [12 x i8] c"Fatal error\00"
@__swift_reflection_version = linkonce_odr hidden constant i16 3
@_swift1_autolink_entries = private constant [12 x i8] c"-lswiftCore\00", section ".swift1_autolink_entries", align 8
@llvm.used = appending global [2 x i8*] [i8* bitcast (i16* @__swift_reflection_version to i8*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_swift1_autolink_entries, i32 0, i32 0)], section "llvm.metadata", align 8

define i32 @main(i32, i8**) #0 {
entry:
  %2 = bitcast i8** %1 to i8*
  %3 = call %swift.type* @_T0s23_ContiguousArrayStorageCyypGMa() #6
  %4 = bitcast %swift.type* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i32 48
  %6 = bitcast i8* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds i8, i8* %4, i32 52
  %10 = bitcast i8* %9 to i16*
  %11 = load i16, i16* %10, align 4
  %12 = zext i16 %11 to i64
  %13 = add i64 %8, 7
  %14 = and i64 %13, -8
  %15 = add i64 %14, 32
  %16 = or i64 %12, 7
  %17 = call noalias %swift.refcounted* @swift_rt_swift_allocObject(%swift.type* %3, i64 %15, i64 %16) #7
  %18 = bitcast %swift.refcounted* %17 to %Ts23_ContiguousArrayStorageCyypG*
  %19 = bitcast %Ts23_ContiguousArrayStorageCyypG* %18 to %Ts27_ContiguousArrayStorageBaseC*
  %offset = load i64, i64* @_T0s27_ContiguousArrayStorageBaseC16countAndCapacitys01_B4BodyVvpWvd, align 8
  %20 = bitcast %Ts27_ContiguousArrayStorageBaseC* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 %offset
  %.countAndCapacity = bitcast i8* %21 to %Ts10_ArrayBodyV*
  %.countAndCapacity._storage = getelementptr inbounds %Ts10_ArrayBodyV, %Ts10_ArrayBodyV* %.countAndCapacity, i32 0, i32 0
  %.countAndCapacity._storage.count = getelementptr inbounds %TSC22_SwiftArrayBodyStorageV, %TSC22_SwiftArrayBodyStorageV* %.countAndCapacity._storage, i32 0, i32 0
  %.countAndCapacity._storage.count._value = getelementptr inbounds %TSi, %TSi* %.countAndCapacity._storage.count, i32 0, i32 0
  store i64 1, i64* %.countAndCapacity._storage.count._value, align 8
  %.countAndCapacity._storage._capacityAndFlags = getelementptr inbounds %TSC22_SwiftArrayBodyStorageV, %TSC22_SwiftArrayBodyStorageV* %.countAndCapacity._storage, i32 0, i32 1
  %.countAndCapacity._storage._capacityAndFlags._value = getelementptr inbounds %TSu, %TSu* %.countAndCapacity._storage._capacityAndFlags, i32 0, i32 0
  store i64 2, i64* %.countAndCapacity._storage._capacityAndFlags._value, align 8
  %22 = bitcast %Ts27_ContiguousArrayStorageBaseC* %19 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 32
  %tailaddr = bitcast i8* %23 to %Any*
  %24 = getelementptr inbounds %Any, %Any* %tailaddr, i32 0, i32 1
  store %swift.type* @_T0SSN, %swift.type** %24, align 8
  %25 = getelementptr inbounds %Any, %Any* %tailaddr, i32 0, i32 0
  %26 = getelementptr inbounds %Any, %Any* %tailaddr, i32 0, i32 0
  %27 = bitcast [24 x i8]* %26 to %TSS*
  %28 = call swiftcc i8* @_T0s19_emptyStringStorages6UInt32Vvau()
  %29 = icmp eq i8* %28, getelementptr inbounds ([13 x i8], [13 x i8]* @0, i64 0, i64 0)
  br i1 %29, label %30, label %31

; <label>:30:                                     ; preds = %entry
  call swiftcc void @_T0s18_fatalErrorMessages5NeverOs12StaticStringV_A2E4fileSu4lines6UInt32V5flagstF(i64 ptrtoint ([12 x i8]* @3 to i64), i64 11, i8 2, i64 ptrtoint ([41 x i8]* @2 to i64), i64 40, i8 2, i64 ptrtoint ([54 x i8]* @1 to i64), i64 53, i8 2, i64 69, i32 0)
  unreachable

; <label>:31:                                     ; preds = %entry
  %._core = getelementptr inbounds %TSS, %TSS* %27, i32 0, i32 0
  %._core._baseAddress = getelementptr inbounds %Ts11_StringCoreV, %Ts11_StringCoreV* %._core, i32 0, i32 0
  %32 = bitcast %TSvSg* %._core._baseAddress to i64*
  store i64 ptrtoint ([13 x i8]* @0 to i64), i64* %32, align 8
  %._core._countAndFlags = getelementptr inbounds %Ts11_StringCoreV, %Ts11_StringCoreV* %._core, i32 0, i32 1
  %._core._countAndFlags._value = getelementptr inbounds %TSu, %TSu* %._core._countAndFlags, i32 0, i32 0
  store i64 12, i64* %._core._countAndFlags._value, align 8
  %._core._owner = getelementptr inbounds %Ts11_StringCoreV, %Ts11_StringCoreV* %._core, i32 0, i32 2
  %33 = bitcast %TyXlSg* %._core._owner to i64*
  store i64 0, i64* %33, align 8
  %34 = call swiftcc { i64, i64, i64 } @_T0s5printyypd_SS9separatorSS10terminatortFfA0_()
  %35 = extractvalue { i64, i64, i64 } %34, 0
  %36 = extractvalue { i64, i64, i64 } %34, 1
  %37 = extractvalue { i64, i64, i64 } %34, 2
  %38 = call swiftcc { i64, i64, i64 } @_T0s5printyypd_SS9separatorSS10terminatortFfA1_()
  %39 = extractvalue { i64, i64, i64 } %38, 0
  %40 = extractvalue { i64, i64, i64 } %38, 1
  %41 = extractvalue { i64, i64, i64 } %38, 2
  call swiftcc void @_T0s5printyypd_SS9separatorSS10terminatortF(%Ts27_ContiguousArrayStorageBaseC* %19, i64 %35, i64 %36, i64 %37, i64 %39, i64 %40, i64 %41)
  ret i32 0
}

; Function Attrs: nounwind readnone
define linkonce_odr hidden %swift.type* @_T0s23_ContiguousArrayStorageCyypGMa() #1 {
entry:
  %0 = load %swift.type*, %swift.type** @_T0s23_ContiguousArrayStorageCyypGML, align 8
  %1 = icmp eq %swift.type* %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = call %swift.type* @_T0ypMa() #6
  %3 = call %swift.type* @_T0s23_ContiguousArrayStorageCMa(%swift.type* %2) #6
  store atomic %swift.type* %3, %swift.type** @_T0s23_ContiguousArrayStorageCyypGML release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %4 = phi %swift.type* [ %0, %entry ], [ %3, %cacheIsNull ]
  ret %swift.type* %4
}

; Function Attrs: nounwind readnone
define linkonce_odr hidden %swift.type* @_T0ypMa() #1 {
entry:
  %protocols = alloca [0 x %swift.protocol*], align 8
  %0 = load %swift.type*, %swift.type** @_T0ypML, align 8
  %1 = icmp eq %swift.type* %0, null
  br i1 %1, label %cacheIsNull, label %cont

cacheIsNull:                                      ; preds = %entry
  %2 = bitcast [0 x %swift.protocol*]* %protocols to i8*
  call void @llvm.lifetime.start.p0i8(i64 0, i8* %2)
  %3 = bitcast [0 x %swift.protocol*]* %protocols to %swift.protocol**
  %4 = call %swift.type* @swift_rt_swift_getExistentialTypeMetadata(i1 true, %swift.type* null, i64 0, %swift.protocol** %3) #7
  %5 = bitcast %swift.protocol** %3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 0, i8* %5)
  store atomic %swift.type* %4, %swift.type** @_T0ypML release, align 8
  br label %cont

cont:                                             ; preds = %cacheIsNull, %entry
  %6 = phi %swift.type* [ %0, %entry ], [ %4, %cacheIsNull ]
  ret %swift.type* %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #2

; Function Attrs: noinline nounwind readonly
define linkonce_odr hidden %swift.type* @swift_rt_swift_getExistentialTypeMetadata(i1, %swift.type*, i64, %swift.protocol**) #3 {
entry:
  %load = load %swift.type* (i1, %swift.type*, i64, %swift.protocol**)*, %swift.type* (i1, %swift.type*, i64, %swift.protocol**)** @_swift_getExistentialTypeMetadata
  %4 = tail call %swift.type* %load(i1 %0, %swift.type* %1, i64 %2, %swift.protocol** %3)
  ret %swift.type* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #2

declare %swift.type* @_T0s23_ContiguousArrayStorageCMa(%swift.type*) #0

; Function Attrs: noinline nounwind
define linkonce_odr hidden %swift.refcounted* @swift_rt_swift_allocObject(%swift.type*, i64, i64) #4 {
entry:
  %load = load %swift.refcounted* (%swift.type*, i64, i64)*, %swift.refcounted* (%swift.type*, i64, i64)** @_swift_allocObject
  %3 = tail call %swift.refcounted* %load(%swift.type* %0, i64 %1, i64 %2)
  ret %swift.refcounted* %3
}

declare swiftcc i8* @_T0s19_emptyStringStorages6UInt32Vvau() #0

; Function Attrs: noinline
declare swiftcc { i64, i64, i64 } @_T0s5printyypd_SS9separatorSS10terminatortFfA0_() #5

; Function Attrs: noinline
declare swiftcc { i64, i64, i64 } @_T0s5printyypd_SS9separatorSS10terminatortFfA1_() #5

; Function Attrs: noinline
declare swiftcc void @_T0s5printyypd_SS9separatorSS10terminatortF(%Ts27_ContiguousArrayStorageBaseC*, i64, i64, i64, i64, i64, i64) #5

; Function Attrs: noinline
declare swiftcc void @_T0s18_fatalErrorMessages5NeverOs12StaticStringV_A2E4fileSu4lines6UInt32V5flagstF(i64, i64, i8, i64, i64, i8, i64, i64, i8, i64, i32) #5

attributes #0 = { "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #1 = { nounwind readnone "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noinline nounwind readonly }
attributes #4 = { noinline nounwind }
attributes #5 = { noinline "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" }
attributes #6 = { nounwind readnone }
attributes #7 = { nounwind }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0, !1, !2, !3}

!0 = !{i32 1, !"wchar_size", i32 2}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 4, !"Objective-C Garbage Collection", i32 1536}
!3 = !{i32 1, !"Swift Version", i32 6}
