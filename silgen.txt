sil_stage raw

import Builtin
import Swift
import SwiftShims

// main
sil @main : $@convention(c) (Int32, UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>) -> Int32 {
bb0(%0 : $Int32, %1 : $UnsafeMutablePointer<Optional<UnsafeMutablePointer<Int8>>>):
  %2 = integer_literal $Builtin.Word, 1           // user: %4
  // function_ref _allocateUninitializedArray<A>(_:)
  %3 = function_ref @_T0s27_allocateUninitializedArraySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // user: %4
  %4 = apply %3<Any>(%2) : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer) // users: %10, %9, %5
  %5 = begin_borrow %4 : $(Array<Any>, Builtin.RawPointer) // users: %9, %8, %6
  %6 = tuple_extract %5 : $(Array<Any>, Builtin.RawPointer), 0 // user: %7
  %7 = copy_value %6 : $Array<Any>                // user: %25
  %8 = tuple_extract %5 : $(Array<Any>, Builtin.RawPointer), 1 // user: %11
  end_borrow %5 from %4 : $(Array<Any>, Builtin.RawPointer), $(Array<Any>, Builtin.RawPointer) // id: %9
  destroy_value %4 : $(Array<Any>, Builtin.RawPointer) // id: %10
  %11 = pointer_to_address %8 : $Builtin.RawPointer to [strict] $*Any // user: %12
  %12 = init_existential_addr %11 : $*Any, $String // user: %19
  %13 = string_literal utf8 "Hello shri!!"        // user: %18
  %14 = integer_literal $Builtin.Word, 12         // user: %18
  %15 = integer_literal $Builtin.Int1, -1         // user: %18
  %16 = metatype $@thin String.Type               // user: %18
  // function_ref String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
  %17 = function_ref @_T0S2SBp21_builtinStringLiteral_Bw17utf8CodeUnitCountBi1_7isASCIItcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %18
  %18 = apply %17(%13, %14, %15, %16) : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String // user: %19
  store %18 to [init] %12 : $*String              // id: %19
  // function_ref default argument 1 of print(_:separator:terminator:)
  %20 = function_ref @_T0s5printyypd_SS9separatorSS10terminatortFfA0_ : $@convention(thin) () -> @owned String // user: %21
  %21 = apply %20() : $@convention(thin) () -> @owned String // user: %25
  // function_ref default argument 2 of print(_:separator:terminator:)
  %22 = function_ref @_T0s5printyypd_SS9separatorSS10terminatortFfA1_ : $@convention(thin) () -> @owned String // user: %23
  %23 = apply %22() : $@convention(thin) () -> @owned String // user: %25
  // function_ref print(_:separator:terminator:)
  %24 = function_ref @_T0s5printyypd_SS9separatorSS10terminatortF : $@convention(thin) (@owned Array<Any>, @owned String, @owned String) -> () // user: %25
  %25 = apply %24(%7, %21, %23) : $@convention(thin) (@owned Array<Any>, @owned String, @owned String) -> ()
  %26 = integer_literal $Builtin.Int32, 0         // user: %27
  %27 = struct $Int32 (%26 : $Builtin.Int32)      // user: %28
  return %27 : $Int32                             // id: %28
} // end sil function 'main'

// _allocateUninitializedArray<A>(_:)
sil [serialized] [always_inline] @_T0s27_allocateUninitializedArraySayxG_BptBwlF : $@convention(thin) <τ_0_0> (Builtin.Word) -> (@owned Array<τ_0_0>, Builtin.RawPointer)

// String.init(_builtinStringLiteral:utf8CodeUnitCount:isASCII:)
sil [serialized] [readonly] [_semantics "string.makeUTF8"] @_T0S2SBp21_builtinStringLiteral_Bw17utf8CodeUnitCountBi1_7isASCIItcfC : $@convention(method) (Builtin.RawPointer, Builtin.Word, Builtin.Int1, @thin String.Type) -> @owned String

// default argument 1 of print(_:separator:terminator:)
sil [noinline] @_T0s5printyypd_SS9separatorSS10terminatortFfA0_ : $@convention(thin) () -> @owned String

// default argument 2 of print(_:separator:terminator:)
sil [noinline] @_T0s5printyypd_SS9separatorSS10terminatortFfA1_ : $@convention(thin) () -> @owned String

// print(_:separator:terminator:)
sil [noinline] @_T0s5printyypd_SS9separatorSS10terminatortF : $@convention(thin) (@owned Array<Any>, @owned String, @owned String) -> ()



